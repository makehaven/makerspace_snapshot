<?php

/**
 * @file
 * Install file for makerspace_snapshot.
 */

use Drupal\Core\Database\Database;

/**
 * Implements hook_schema().
 */
function makerspace_snapshot_schema() {
  $schema = [];

  $schema['ms_snapshot'] = [
    'description' => 'Snapshot metadata.',
    'fields' => [
      'id' => ['type' => 'serial', 'not null' => TRUE],
      'snapshot_type' => ['type' => 'varchar', 'length' => 255, 'not null' => TRUE],
      'snapshot_date' => ['type' => 'varchar', 'length' => 10, 'not null' => TRUE], // YYYY-MM-01
      'is_test' => ['type' => 'int', 'size' => 'tiny', 'not null' => TRUE, 'default' => 0],
      'created_at' => ['type' => 'int', 'not null' => FALSE],
    ],
    'primary key' => ['id'],
  ];

  $schema['ms_fact_org_snapshot'] = [
    'description' => 'Org-level snapshot metrics.',
    'fields' => [
      'snapshot_id' => ['type' => 'int', 'not null' => TRUE],
      'members_active' => ['type' => 'int', 'not null' => TRUE, 'default' => 0],
      'members_paused' => ['type' => 'int', 'not null' => TRUE, 'default' => 0],
      'members_lapsed' => ['type' => 'int', 'not null' => TRUE, 'default' => 0],
      'joins'          => ['type' => 'int', 'not null' => TRUE, 'default' => 0],
      'cancels'        => ['type' => 'int', 'not null' => TRUE, 'default' => 0],
      'net_change'     => ['type' => 'int', 'not null' => TRUE, 'default' => 0],
    ],
    'primary key' => ['snapshot_id'],
  ];

  $schema['ms_fact_plan_snapshot'] = [
    'description' => 'Per-plan snapshot counts for active members.',
    'fields' => [
      'snapshot_id' => ['type' => 'int', 'not null' => TRUE],
      'plan_code'      => ['type' => 'varchar', 'length' => 128, 'not null' => TRUE],
      'plan_label'     => ['type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => ''],
      'count_members'   => ['type' => 'int', 'not null' => TRUE, 'default' => 0],
    ],
    'primary key' => ['snapshot_id', 'plan_code'],
    'indexes' => [
      'plan_code_idx' => ['plan_code'],
    ],
  ];

  return $schema;
}

/**
 * Update database schema for snapshot types and test data.
 */
function makerspace_snapshot_update_10001() {
  $connection = \Drupal::database();
  $schema = $connection->schema();

  // Rename old tables.
  if ($schema->tableExists('ms_fact_monthly_org')) {
    $schema->renameTable('ms_fact_monthly_org', 'ms_fact_monthly_org_old');
  }
  if ($schema->tableExists('ms_fact_monthly_plan_counts')) {
    $schema->renameTable('ms_fact_monthly_plan_counts', 'ms_fact_monthly_plan_counts_old');
  }

  // Create new tables from schema definition.
  $new_schema = makerspace_snapshot_schema();
  if (!$schema->tableExists('ms_snapshot')) {
    $schema->createTable('ms_snapshot', $new_schema['ms_snapshot']);
  }
  if (!$schema->tableExists('ms_fact_org_snapshot')) {
    $schema->createTable('ms_fact_org_snapshot', $new_schema['ms_fact_org_snapshot']);
  }
  if (!$schema->tableExists('ms_fact_plan_snapshot')) {
    $schema->createTable('ms_fact_plan_snapshot', $new_schema['ms_fact_plan_snapshot']);
  }

  // Migrate data.
  if ($schema->tableExists('ms_fact_monthly_org_old')) {
    $results = $connection->select('ms_fact_monthly_org_old', 'o')
      ->fields('o')
      ->execute();

    foreach ($results as $row) {
      $snapshot_date = (new \DateTimeImmutable($row->snapshot_month))->format('Y-m-01');
      $snapshot_id = $connection->insert('ms_snapshot')
        ->fields([
          'snapshot_type' => 'monthly',
          'snapshot_date' => $snapshot_date,
          'is_test' => 0,
          'created_at' => $row->created_at,
        ])
        ->execute();

      if ($snapshot_id) {
          $connection->insert('ms_fact_org_snapshot')
            ->fields([
              'snapshot_id' => $snapshot_id,
              'members_active' => $row->members_active,
              'members_paused' => $row->members_paused,
              'members_lapsed' => $row->members_lapsed,
              'joins'          => $row->joins,
              'cancels'        => $row->cancels,
              'net_change'     => $row->net_change,
            ])->execute();

          // Now for the plan counts for this snapshot_month
          $plan_counts = $connection->select('ms_fact_monthly_plan_counts_old', 'p')
            ->fields('p')
            ->condition('snapshot_month', $row->snapshot_month)
            ->execute();

          foreach ($plan_counts as $plan_row) {
            $connection->insert('ms_fact_plan_snapshot')
              ->fields([
                'snapshot_id' => $snapshot_id,
                'plan_code' => $plan_row->plan_code,
                'plan_label' => $plan_row->plan_label,
                'count_members' => $plan_row->active_count,
              ])->execute();
          }
      }
    }
  }

  // Drop old tables.
  if ($schema->tableExists('ms_fact_monthly_org_old')) {
    $schema->dropTable('ms_fact_monthly_org_old');
  }
  if ($schema->tableExists('ms_fact_monthly_plan_counts_old')) {
    $schema->dropTable('ms_fact_monthly_plan_counts_old');
  }
}

/**
 * Update ms_fact_plan_snapshot to use count_members.
 */
function makerspace_snapshot_update_10002() {
  $connection = \Drupal::database();
  $schema = $connection->schema();

  if ($schema->tableExists('ms_fact_plan_snapshot')) {
    if ($schema->fieldExists('ms_fact_plan_snapshot', 'active_count')) {
      $schema->changeField('ms_fact_plan_snapshot', 'active_count', 'count_members', [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ]);
    }
    if ($schema->fieldExists('ms_fact_plan_snapshot', 'paused_count')) {
      $schema->dropField('ms_fact_plan_snapshot', 'paused_count');
    }
    if ($schema->fieldExists('ms_fact_plan_snapshot', 'lapsed_count')) {
      $schema->dropField('ms_fact_plan_snapshot', 'lapsed_count');
    }
  }
}

/**
 * Implements hook_install().
 */
function makerspace_snapshot_install() {
  drupal_install_schema('makerspace_snapshot');

  // Seed data if tables are empty.
  $connection = \Drupal::database();
  $count = $connection->select('ms_snapshot')->countQuery()->execute()->fetchField();
  if ($count == 0) {
    $snapshot_date = (new \DateTimeImmutable('first day of last month'))->format('Y-m-01');
    $snapshot_id = $connection->insert('ms_snapshot')
      ->fields([
        'snapshot_type' => 'monthly',
        'snapshot_date' => $snapshot_date,
        'is_test' => 0,
        'created_at' => time(),
      ])
      ->execute();

    if ($snapshot_id) {
      $connection->insert('ms_fact_org_snapshot')
        ->fields([
          'snapshot_id' => $snapshot_id,
          'members_active' => 700,
          'members_paused' => 22,
          'members_lapsed' => 9,
          'joins'          => 35,
          'cancels'        => 18,
          'net_change'     => 17,
        ])->execute();

      $connection->insert('ms_fact_plan_snapshot')
        ->fields([
          'snapshot_id' => $snapshot_id,
          'plan_code' => 'STD',
          'plan_label' => 'Standard',
          'count_members' => 540,
        ])->execute();

      $connection->insert('ms_fact_plan_snapshot')
        ->fields([
          'snapshot_id' => $snapshot_id,
          'plan_code' => 'DIS',
          'plan_label' => 'Discount',
          'count_members' => 120,
        ])->execute();
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function makerspace_snapshot_uninstall() {
  drupal_uninstall_schema('makerspace_snapshot');
}
